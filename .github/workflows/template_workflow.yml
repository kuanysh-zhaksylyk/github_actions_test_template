name: template_workflow

on:
  # workflow_dispatch:
  # It's callable template
  workflow_call:
    secrets:
      sftp-user:
        required: true
      sftp-key:
        required: true
      sftp-host:
        required: true
      sftp-port:
        required: true
    inputs:
      skip-tests:
        required: false
        type: boolean
      environment:
        type: string
        required: false
    outputs:
      others-var:
        description: "Other steps"
        value: ${{ jobs.others.outputs.output2 }}

jobs:
  check-changes:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
    env:
      TERM: linux
    # Set job outputs to values from filter step
    outputs:
      python: ${{ steps.filter.outputs.python }}
      others: ${{ steps.filter.outputs.others }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
        
    - name: Checking changes
      uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          python:
            - '**'
          others:
            - '!connector.py'

  # JOB to build only python dependecies and tests
  python:
    needs: check-changes
    if: ${{ needs.check-changes.outputs.python == 'true' }}
    runs-on: ${{ matrix.os }}
    environment: ${{ inputs.environment }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
    env:
      TERM: linux
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Using ssh agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SFTP_SSH }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download deps
        run: |
          sudo apt-get update
          python3 -m venv venv
          source venv/bin/activate  
          pip install paramiko python-dotenv 
          
      - name: Download ML models
        if: ${{ !inputs.skip-tests }}
        run: |
          source venv/bin/activate  
          python3 connector.py
          ls -l
        env:
          sftp-user: ${{ secrets.sftp-user }}
          sftp-key: ${{ secrets.sftp-key }}
          sftp-host: ${{ secrets.sftp-host }}
          sftp-port: ${{ secrets.sftp-port }}
          python-skip: ${{ vars.WITHOUT_PYTHON_AGENTS_TESTS }} 
          
  # JOB to build others steps
  others:
    needs: check-changes
    if: ${{ needs.check-changes.outputs.others == 'false' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
    env:
      TERM: linux
    outputs:  
      output2: ${{ steps.others-step.outputs.others-var }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Update
        run: |
          sudo apt-get update
          ls -l
          
      
      - name: Create build-output artifact
        uses: actions/upload-artifact@v4
        with:
            name: build-output - ${{ matrix.os }}
            path: .

      - name: Verify variables to move further
        id: others-step
        run: | 
          echo "others-var=true" >> $GITHUB_OUTPUT
